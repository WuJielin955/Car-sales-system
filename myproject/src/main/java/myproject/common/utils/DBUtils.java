package myproject.common.utils;import java.io.*;import java.nio.charset.StandardCharsets;public class DBUtils {	/**	 * 数据库安装地址	 */	public static final String host = "127.0.0.1";	/**	 * 操作数据库	 */	public static final String dbName = "G99v9";	/**	 * 用户名	 */	public static final String root = "root";	/**	 * 密码	 */	public static final String pwd = "root";	/**	 * 备份位置	 */	public static final String backPath = "D:";	/**	 * 备份文件命名规则	 */	public static final String fileName = "work.sql";	/**	 * MySQL命令工具 绝对路径	 */	public static final String toolPath = "D:\\phpstudy_pro\\Extensions\\MySQL8.0.12\\bin\\";	/**	 * 备份操作工具	 */	public static String dbBackUp() {		//最终文件名		String finalFileName = System.currentTimeMillis() + fileName;		String pathSql = backPath + finalFileName;		File fileSql = new File(pathSql);		//创建备份sql文件		if (!fileSql.exists()) {			try {				fileSql.createNewFile();			} catch (IOException e) {				e.printStackTrace();			}		}		StringBuffer sb = new StringBuffer();		sb.append(toolPath + "mysqldump");		sb.append(" -h" + host);		sb.append(" -u" + root);		sb.append(" -p" + pwd);		sb.append(" " + dbName + " >");		sb.append(pathSql);		System.out.println("cmd命令为：" + sb);		System.out.println("开始备份：" + dbName);		Runtime runtime = Runtime.getRuntime();		try {			Process process = runtime.exec("cmd /c " + sb);		} catch (IOException e) {			e.printStackTrace();			return null;		}		return pathSql;	}	/**	 * 数据恢复操作工具	 */	public static boolean dbRestore(String filePath) {		StringBuilder sb = new StringBuilder();		sb.append(toolPath + "mysql");		sb.append(" -h" + host);		sb.append(" -u" + root);		sb.append(" -p" + pwd);		sb.append(" " + dbName + " <");		sb.append(filePath);		System.out.println("cmd命令为：" + sb);		Runtime runtime = Runtime.getRuntime();		System.out.println("开始还原数据");		try {			//插入数据库备份恢复记录表			Process process = runtime.exec("cmd /c" + sb);			InputStream is = process.getInputStream();			BufferedReader bf = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8));			String line = null;			while ((line = bf.readLine()) != null) {				System.out.println(line);			}			is.close();			bf.close();		} catch (IOException e) {			e.printStackTrace();			return false;		}		return true;	}}